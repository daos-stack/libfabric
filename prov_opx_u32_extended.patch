diff --git a/prov/opx/include/rdma/opx/fi_opx_endpoint.h b/prov/opx/include/rdma/opx/fi_opx_endpoint.h
index e588fd7ea..738d05929 100644
--- a/prov/opx/include/rdma/opx/fi_opx_endpoint.h
+++ b/prov/opx/include/rdma/opx/fi_opx_endpoint.h
@@ -1329,7 +1329,7 @@ void complete_receive_operation_internal (struct fid_ep *ep,
 
 
 			const uint8_t u8_rx = hdr->rendezvous.origin_rx;
-			const uint8_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->rendezvous.origin_rx);
+			const uint32_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->rendezvous.origin_rx);
 
 			if (OFI_LIKELY(niov == 1)) {
 				assert(payload != NULL);
@@ -1875,7 +1875,7 @@ void fi_opx_ep_rx_process_header_rzv_data(struct fi_opx_ep * opx_ep,
 	case FI_OPX_HFI_DPUT_OPCODE_ATOMIC_FETCH:
 	{
 		const uint8_t u8_rx = hdr->dput.origin_rx;
-		const uint8_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->dput.origin_rx);
+		const uint32_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->dput.origin_rx);
 		struct fi_opx_mr *opx_mr = NULL;
 
 		uint64_t key = hdr->dput.target.mr.key;
@@ -1935,7 +1935,7 @@ void fi_opx_ep_rx_process_header_rzv_data(struct fi_opx_ep * opx_ep,
 	case FI_OPX_HFI_DPUT_OPCODE_ATOMIC_COMPARE_FETCH:
 	{
 		const uint8_t u8_rx = hdr->dput.origin_rx;
-		const uint8_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->dput.origin_rx);
+		const uint32_t u32_ext_rx = fi_opx_ep_get_u32_extended_rx(opx_ep, is_intranode, hdr->dput.origin_rx);
 		struct fi_opx_mr *opx_mr = NULL;
 
 		uint64_t key = hdr->dput.target.mr.key;
diff --git a/prov/opx/src/fi_opx_rma.c b/prov/opx/src/fi_opx_rma.c
index 69b9c4677..999fdc181 100644
--- a/prov/opx/src/fi_opx_rma.c
+++ b/prov/opx/src/fi_opx_rma.c
@@ -445,12 +445,23 @@ void fi_opx_get_daos_av_addr_rank(struct fi_opx_ep *opx_ep,
 	if (opx_ep->daos_info.av_rank_hashmap) {
 		struct fi_opx_daos_av_rank *cur_av_rank = NULL;
 		struct fi_opx_daos_av_rank *tmp_av_rank = NULL;
+		int i = 0;
 
 		HASH_ITER(hh, opx_ep->daos_info.av_rank_hashmap, cur_av_rank, tmp_av_rank) {
 			if (cur_av_rank) {
-				opx_ep->daos_info.rank = cur_av_rank->key.rank;
-				opx_ep->daos_info.rank_inst = cur_av_rank->key.rank_inst;
-				break;
+				union fi_opx_addr addr;
+				addr.fi = cur_av_rank->fi_addr;
+
+				FI_DBG_TRACE(fi_opx_global.prov, FI_LOG_EP_DATA, "av_rank_hashmap[%d] = rank:%d, LID:0x%x, fi:%08lu.\n",
+					i++, cur_av_rank->key.rank, addr.uid.lid, addr.fi);
+				if (addr.fi == dst_addr.fi) {
+					opx_ep->daos_info.rank = cur_av_rank->key.rank;
+					opx_ep->daos_info.rank_inst = cur_av_rank->key.rank_inst;
+
+					FI_DBG_TRACE(fi_opx_global.prov, FI_LOG_EP_DATA, "av_rank_hashmap[%d] = rank:%d, LID:0x%x fi:%08lx- Found.\n",
+						i-1, opx_ep->daos_info.rank, addr.uid.lid, addr.fi);
+					break;
+				}
 			}
 		}
 	}
